package model.AM;

import java.sql.CallableStatement;
import java.sql.ResultSet;

import java.sql.SQLException;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import model.AM.common.LOGAM;

import model.View.CtfMainVOImpl;

import oracle.jbo.JboException;
import oracle.jbo.ViewCriteria;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;

import oracle.jdbc.OracleTypes;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Nov 07 12:27:23 EET 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LOGAMImpl extends ApplicationModuleImpl implements LOGAM {
    /**
     * This is the default constructor (do not remove).
     */
    public LOGAMImpl() {
    }

    /**
     * Container's getter for AdjTypeVO.
     * @return AdjTypeVO
     */
    public ViewObjectImpl getAdjTypeVO() {
        return (ViewObjectImpl) findViewObject("AdjTypeVO");
    }

    /**
     * Container's getter for CtfItemVO.
     * @return CtfItemVO
     */
    public ViewObjectImpl getCtfItemVO() {
        return (ViewObjectImpl) findViewObject("CtfItemVO");
    }

    /**
     * Container's getter for CtfMainVO.
     * @return CtfMainVO
     */
    public CtfMainVOImpl getCtfMainVO() {
        return (CtfMainVOImpl) findViewObject("CtfMainVO");
    }

    /**
     * Container's getter for FacTypeVO.
     * @return FacTypeVO
     */
    public ViewObjectImpl getFacTypeVO() {
        return (ViewObjectImpl) findViewObject("FacTypeVO");
    }

    /**
     * Container's getter for FacilityVO.
     * @return FacilityVO
     */
    public ViewObjectImpl getFacilityVO() {
        return (ViewObjectImpl) findViewObject("FacilityVO");
    }

    /**
     * Container's getter for ProductVO.
     * @return ProductVO
     */
    public ViewObjectImpl getProductVO() {
        return (ViewObjectImpl) findViewObject("ProductVO");
    }

    /**
     * Container's getter for CtfItemAdjTypeVO.
     * @return CtfItemAdjTypeVO
     */
    public ViewObjectImpl getCtfItemAdjTypeVO() {
        return (ViewObjectImpl) findViewObject("CtfItemAdjTypeVO");
    }

    /**
     * Container's getter for CtfItemCtfMainVO.
     * @return CtfItemCtfMainVO
     */
    public ViewObjectImpl getCtfItemCtfMainVO() {
        return (ViewObjectImpl) findViewObject("CtfItemCtfMainVO");
    }

    /**
     * Container's getter for CtfMainFacilityVO.
     * @return CtfMainFacilityVO
     */
    public CtfMainVOImpl getCtfMainFacilityVO() {
        return (CtfMainVOImpl) findViewObject("CtfMainFacilityVO");
    }

    /**
     * Container's getter for FacilityFacTypeVO.
     * @return FacilityFacTypeVO
     */
    public ViewObjectImpl getFacilityFacTypeVO() {
        return (ViewObjectImpl) findViewObject("FacilityFacTypeVO");
    }

    /**
     * Container's getter for CtfItemProductVO.
     * @return CtfItemProductVO
     */
    public ViewObjectImpl getCtfItemProductVO() {
        return (ViewObjectImpl) findViewObject("CtfItemProductVO");
    }

    /**
     * Container's getter for FacTypeLOV.
     * @return FacTypeLOV
     */
    public ViewObjectImpl getFacTypeLOV() {
        return (ViewObjectImpl) findViewObject("FacTypeLOV");
    }

    /**
     * Container's getter for FacilityLOV.
     * @return FacilityLOV
     */
    public ViewObjectImpl getFacilityLOV() {
        return (ViewObjectImpl) findViewObject("FacilityLOV");
    }

    /**
     * Container's getter for AdjTypeLOV.
     * @return AdjTypeLOV
     */
    public ViewObjectImpl getAdjTypeLOV() {
        return (ViewObjectImpl) findViewObject("AdjTypeLOV");
    }

    /**
     * Container's getter for ProductLOV.
     * @return ProductLOV
     */
    public ViewObjectImpl getProductLOV() {
        return (ViewObjectImpl) findViewObject("ProductLOV");
    }

    /**
     * Container's getter for CtfMainFacilityFacTypeVO.
     * @return CtfMainFacilityFacTypeVO
     */
    public CtfMainVOImpl getCtfMainFacilityFacTypeVO() {
        return (CtfMainVOImpl) findViewObject("CtfMainFacilityFacTypeVO");
    }

    /**
     * Container's getter for CtfItemCtfMainFacilityFacTypeVO.
     * @return CtfItemCtfMainFacilityFacTypeVO
     */
    public ViewObjectImpl getCtfItemCtfMainFacilityFacTypeVO() {
        return (ViewObjectImpl) findViewObject("CtfItemCtfMainFacilityFacTypeVO");
    }

    /**
     * Container's getter for FacilityFacilitySupVO.
     * @return FacilityFacilitySupVO
     */
    public ViewObjectImpl getFacilityFacilitySupVO() {
        return (ViewObjectImpl) findViewObject("FacilityFacilitySupVO");
    }

    /**
     * Container's getter for CtfMainOpenVO.
     * @return CtfMainOpenVO
     */
    public ViewObjectImpl getCtfMainOpenVO() {
        return (ViewObjectImpl) findViewObject("CtfMainOpenVO");
    }

    /**
     * Container's getter for CtfItemVOCtfMainOpenVO.
     * @return CtfItemVOCtfMainOpenVO
     */
    public ViewObjectImpl getCtfItemVOCtfMainOpenVO() {
        return (ViewObjectImpl) findViewObject("CtfItemVOCtfMainOpenVO");
    }

    /**
     * Container's getter for WebUsersVO.
     * @return WebUsersVO
     */
    public ViewObjectImpl getWebUsersVO() {
        return (ViewObjectImpl) findViewObject("WebUsersVO");
    }

    /**
     * Container's getter for ActiveMonthsVO.
     * @return ActiveMonthsVO
     */
    public ViewObjectImpl getActiveMonthsVO() {
        return (ViewObjectImpl) findViewObject("ActiveMonthsVO");
    }

    /**
     * Container's getter for MonthsLOV.
     * @return MonthsLOV
     */
    public ViewObjectImpl getMonthsLOV() {
        return (ViewObjectImpl) findViewObject("MonthsLOV");
    }

    /**
     * Container's getter for YearsLOV.
     * @return YearsLOV
     */
    public ViewObjectImpl getYearsLOV() {
        return (ViewObjectImpl) findViewObject("YearsLOV");
    }

    /**
     * Container's getter for DirectoratesLOV.
     * @return DirectoratesLOV
     */
    public ViewObjectImpl getDirectoratesLOV() {
        return (ViewObjectImpl) findViewObject("DirectoratesLOV");
    }

    /**
     * Container's getter for CentersLOV.
     * @return CentersLOV
     */
    public ViewObjectImpl getCentersLOV() {
        return (ViewObjectImpl) findViewObject("CentersLOV");
    }

    /**
     * Container's getter for CentersLOVDirectoratesLOV.
     * @return CentersLOVDirectoratesLOV
     */
    public ViewObjectImpl getCentersLOVDirectoratesLOV() {
        return (ViewObjectImpl) findViewObject("CentersLOVDirectoratesLOV");
    }

    /**
     * Container's getter for GroupsVO.
     * @return GroupsVO
     */
    public ViewObjectImpl getGroupsVO() {
        return (ViewObjectImpl) findViewObject("GroupsVO");
    }

    /**
     * Container's getter for GroupOfFacilitiesGroupsVO.
     * @return GroupOfFacilitiesGroupsVO
     */
    public ViewObjectImpl getGroupOfFacilitiesGroupsVO() {
        return (ViewObjectImpl) findViewObject("GroupOfFacilitiesGroupsVO");
    }

    /**
     * Container's getter for GroupOfFacilitiesVO.
     * @return GroupOfFacilitiesVO
     */
    public ViewObjectImpl getGroupOfFacilitiesVO() {
        return (ViewObjectImpl) findViewObject("GroupOfFacilitiesVO");
    }

    /**
     * Container's getter for GroupOfFacilitiesFacilityVO.
     * @return GroupOfFacilitiesFacilityVO
     */
    public ViewObjectImpl getGroupOfFacilitiesFacilityVO() {
        return (ViewObjectImpl) findViewObject("GroupOfFacilitiesFacilityVO");
    }

    /**
     * Container's getter for GroupsLOV1.
     * @return GroupsLOV1
     */
    public ViewObjectImpl getGroupsLOV1() {
        return (ViewObjectImpl) findViewObject("GroupsLOV1");
    }

    /**
     * Container's getter for FacHierLevel2LOV1.
     * @return FacHierLevel2LOV1
     */
    public ViewObjectImpl getFacHierLevel2LOV1() {
        return (ViewObjectImpl) findViewObject("FacHierLevel2LOV1");
    }

    /**
     * Container's getter for lockedLOV1.
     * @return lockedLOV1
     */
    public ViewObjectImpl getlockedLOV1() {
        return (ViewObjectImpl) findViewObject("lockedLOV1");
    }

    /**
     * Container's getter for repTypeParamLOV1.
     * @return repTypeParamLOV1
     */
    public ViewObjectImpl getrepTypeParamLOV1() {
        return (ViewObjectImpl) findViewObject("repTypeParamLOV1");
    }

    /**
     * Container's getter for cypVO1.
     * @return cypVO1
     */
    public ViewObjectImpl getcypVO1() {
        return (ViewObjectImpl) findViewObject("cypVO1");
    }

    /**
     * Container's getter for repFacilityTypeParam1.
     * @return repFacilityTypeParam1
     */
    public ViewObjectImpl getrepFacilityTypeParam1() {
        return (ViewObjectImpl) findViewObject("repFacilityTypeParam1");
    }

    /**
     * Container's getter for repParameters1.
     * @return repParameters1
     */
    public ViewObjectImpl getrepParameters1() {
        return (ViewObjectImpl) findViewObject("repParameters1");
    }

    /**
     * Container's getter for prodLOV1.
     * @return prodLOV1
     */
    public ViewObjectImpl getprodLOV1() {
        return (ViewObjectImpl) findViewObject("prodLOV1");
    }

    /**
     * Container's getter for monLOV1.
     * @return monLOV1
     */
    public ViewObjectImpl getmonLOV1() {
        return (ViewObjectImpl) findViewObject("monLOV1");
    }

    /**
     * Container's getter for quarterLOV1.
     * @return quarterLOV1
     */
    public ViewObjectImpl getquarterLOV1() {
        return (ViewObjectImpl) findViewObject("quarterLOV1");
    }

    /**
     * Container's getter for halfYears1.
     * @return halfYears1
     */
    public ViewObjectImpl gethalfYears1() {
        return (ViewObjectImpl) findViewObject("halfYears1");
    }

    /**
     * Container's getter for year_repLOV1.
     * @return year_repLOV1
     */
    public ViewObjectImpl getyear_repLOV1() {
        return (ViewObjectImpl) findViewObject("year_repLOV1");
    }

    /**
     * Container's getter for dispensedToUserLOV1.
     * @return dispensedToUserLOV1
     */
    public ViewObjectImpl getdispensedToUserLOV1() {
        return (ViewObjectImpl) findViewObject("dispensedToUserLOV1");
    }

    /**
     * Container's getter for graphNameLOV1.
     * @return graphNameLOV1
     */
    public ViewObjectImpl getgraphNameLOV1() {
        return (ViewObjectImpl) findViewObject("graphNameLOV1");
    }

    /**
     * Container's getter for serviceStatisticsLOV1.
     * @return serviceStatisticsLOV1
     */
    public ViewObjectImpl getserviceStatisticsLOV1() {
        return (ViewObjectImpl) findViewObject("serviceStatisticsLOV1");
    }

    /**
     * Container's getter for FkCtfItemAdjVL1.
     * @return FkCtfItemAdjVL1
     */
    public ViewLinkImpl getFkCtfItemAdjVL1() {
        return (ViewLinkImpl) findViewLink("FkCtfItemAdjVL1");
    }

    /**
     * Container's getter for FkCtfItemCtfMainVL1.
     * @return FkCtfItemCtfMainVL1
     */
    public ViewLinkImpl getFkCtfItemCtfMainVL1() {
        return (ViewLinkImpl) findViewLink("FkCtfItemCtfMainVL1");
    }

    /**
     * Container's getter for FkCtfMainVL1.
     * @return FkCtfMainVL1
     */
    public ViewLinkImpl getFkCtfMainVL1() {
        return (ViewLinkImpl) findViewLink("FkCtfMainVL1");
    }

    /**
     * Container's getter for FkFacilityFacTypeVL1.
     * @return FkFacilityFacTypeVL1
     */
    public ViewLinkImpl getFkFacilityFacTypeVL1() {
        return (ViewLinkImpl) findViewLink("FkFacilityFacTypeVL1");
    }

    /**
     * Container's getter for FkCtfItemProductVL1.
     * @return FkCtfItemProductVL1
     */
    public ViewLinkImpl getFkCtfItemProductVL1() {
        return (ViewLinkImpl) findViewLink("FkCtfItemProductVL1");
    }

    /**
     * Container's getter for FkCtfMainVL2.
     * @return FkCtfMainVL2
     */
    public ViewLinkImpl getFkCtfMainVL2() {
        return (ViewLinkImpl) findViewLink("FkCtfMainVL2");
    }

    /**
     * Container's getter for FkCtfItemCtfMainVL2.
     * @return FkCtfItemCtfMainVL2
     */
    public ViewLinkImpl getFkCtfItemCtfMainVL2() {
        return (ViewLinkImpl) findViewLink("FkCtfItemCtfMainVL2");
    }

    /**
     * Container's getter for FkFacilitySuplierVL1.
     * @return FkFacilitySuplierVL1
     */
    public ViewLinkImpl getFkFacilitySuplierVL1() {
        return (ViewLinkImpl) findViewLink("FkFacilitySuplierVL1");
    }

    /**
     * Container's getter for CtfMainOpenCtfItem1.
     * @return CtfMainOpenCtfItem1
     */
    public ViewLinkImpl getCtfMainOpenCtfItem1() {
        return (ViewLinkImpl) findViewLink("CtfMainOpenCtfItem1");
    }

    /**
     * Container's getter for DirectoratesCentersVL1.
     * @return DirectoratesCentersVL1
     */
    public ViewLinkImpl getDirectoratesCentersVL1() {
        return (ViewLinkImpl) findViewLink("DirectoratesCentersVL1");
    }

    /**
     * Container's getter for GofFk2VL.
     * @return GofFk2VL
     */
    public ViewLinkImpl getGofFk2VL() {
        return (ViewLinkImpl) findViewLink("GofFk2VL");
    }

    /**
     * Container's getter for FacGofVL1.
     * @return FacGofVL1
     */
    public ViewLinkImpl getFacGofVL1() {
        return (ViewLinkImpl) findViewLink("FacGofVL1");
    }
    
    public ResultSet getItemsByMainId(String mainId) throws SQLException {
        ResultSet rs = null;
        CallableStatement cst = null;
        String plsql = 
            "begin ? := LOGISTICS_PKG.GET_LAST_BALANCE(?); end;";
        cst = getDBTransaction().createCallableStatement(plsql, 0);
        try {
            cst.registerOutParameter(1, OracleTypes.CURSOR);
            cst.setString(2, mainId);
            cst.executeUpdate();
            rs = (ResultSet) cst.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        }finally{
           // cst.close();
        }
        return rs;
    }
    
    public ResultSet CalculateValues(String mainId) throws SQLException {
        ResultSet rs = null;
        CallableStatement cst = null;
        String plsql = 
            "begin ? := LOGISTICS_PKG.CalculateValuesNew(?); end;";
        cst = getDBTransaction().createCallableStatement(plsql, 0);
        try {
            cst.registerOutParameter(1, OracleTypes.CURSOR);
            cst.setString(2, mainId);
            cst.executeUpdate();
            rs = (ResultSet) cst.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        }finally{
        // cst.close();
        }
        return rs;
    }

    /**
     * Container's getter for ParamsLOV1.
     * @return ParamsLOV1
     */
    public ViewObjectImpl getParamsLOV1() {
        return (ViewObjectImpl) findViewObject("ParamsLOV1");
    }
    
    public void SearchMainItems(String code,
    oracle.jbo.domain.Date date, String chooseDate, 
oracle.jbo.domain.Date startDate, oracle.jbo.domain.Date endDate){
        ViewObjectImpl vo = this.getCtfMainVO();
        ViewCriteria vc = vo.getViewCriteria("CtfMainVOCriteria");
        ViewCriteria vcRange = vo.getViewCriteria("CtfMainVOCriteriaRange");
        if(chooseDate.equals("1")){
            vo.removeApplyViewCriteriaName("CtfMainVOCriteriaRange");
            vo.setWhereClause(null);
            vo.executeQuery();    
            //System.out.println("xxxxxxxxxxxxxxxxxxx choose date = 1 xxxxxxxxxxxxxx");
            
            vo.applyViewCriteria(vc);
            if( (date+"").equals("null") || date == null || date+"" == ""){
                date = null;
                //System.out.println(" xxxxxxxxxxxxxx date is null xxxxxxxxxxxxxxxxx date is xx"+date+" and code is "+code);
            vo.setNamedWhereClauseParam("pCode", code);
            vo.setNamedWhereClauseParam("pD", date);
            vo.executeQuery();
            }else if( (code+"").equals("null") || code == null || code == ""){
                    //System.out.println(" xxxxxxxxxxxxxx code is null xxxxxxxxxxxxxxxxx date is xx"+date+" and code is "+code);
                    code = null;
                    
            vo.setNamedWhereClauseParam("pCode", code);
            vo.setNamedWhereClauseParam("pD", date);
            vo.executeQuery();
            }else{
                //System.out.println("xxxxxxxxxxxxxxxxxx All parameters are done xxxxxxxxxxxxxxxxxxx");
                vo.setNamedWhereClauseParam("pCode", code);
                vo.setNamedWhereClauseParam("pD", date);
                vo.executeQuery();
            }
        }else if(chooseDate.equals("2")){
            if( (code+"").equals("null") || code == null || code == ""){
                                //System.out.println(" xxxxxxxxxxxxxx code is null xxxxxxxxxxxxxxxxx date is xx"+date+" and code is "+code);
                                code = null;
            }
            if( (startDate+"").equals("null")
                || startDate == null || startDate+"" == ""){
                                //System.out.println(" xxxxxxxxxxxxxx startDate is null xxxxxxxxxxxxxxxxx date is xx"+date+" and code is "+code);
                                startDate = null;
            }
            if( (endDate+"").equals("null")
                || endDate == null || endDate+"" == ""){
                                //System.out.println(" xxxxxxxxxxxxxx endDate is null xxxxxxxxxxxxxxxxx date is xx"+date+" and code is "+code);
                                endDate = null;
                                
            }
            
            vo.removeApplyViewCriteriaName("CtfMainVOCriteria");
            vo.setWhereClause(null);
            vo.executeQuery();    
            //System.out.println("xxxxxxxxxxxxxxxxxxx choose date = 2 xxxxxxxxxxxxxx");
            
            
            vo.applyViewCriteria(vcRange);
        
                //System.out.println("xxxxxxxxxxxxxxxxxx Range of dates parameters are done xxxxxxxxxxxxxxxxxxx");
                vo.setNamedWhereClauseParam("pCode", code);
                vo.setNamedWhereClauseParam("startDate", startDate);
                vo.setNamedWhereClauseParam("endDate", endDate);
                vo.setWhereClause(null);
                vo.executeQuery();
        
//            if( (startDate+"").equals("null") || startDate == null || startDate+"" == ""){
//                startDate = null;
//                //System.out.println(" xxxxxxxxxxxxxx date is null xxxxxxxxxxxxxxxxx date is xx"+date+" and code is "+code);
//            vo.setNamedWhereClauseParam("pCode", code);
//            vo.setNamedWhereClauseParam("endDate", date);
//            vo.executeQuery();
//            
//            } else   if( (endDate+"").equals("null") || endDate == null || endDate+"" == ""){
//                endDate = null;
//                //System.out.println(" xxxxxxxxxxxxxx date is null xxxxxxxxxxxxxxxxx date is xx"+date+" and code is "+code);
//            vo.setNamedWhereClauseParam("pCode", code);
//            vo.setNamedWhereClauseParam("startDate", startDate);
//            vo.executeQuery();
//            
//            }else if( (code+"").equals("null") || code == null || code == ""){
//                    //System.out.println(" xxxxxxxxxxxxxx code is null xxxxxxxxxxxxxxxxx date is xx"+date+" and code is "+code);
//                    code = null;
//                    
//            vo.setNamedWhereClauseParam("pCode", code);
//            vo.setNamedWhereClauseParam("pD", date);
//            vo.executeQuery();
//            }else{
                
          //  }
        }else{
            
            vo.removeApplyViewCriteriaName("CtfMainVOCriteriaRange");
            vo.setWhereClause(null);
            vo.executeQuery();    
             vo.applyViewCriteria(vc);
            //System.out.println("xxxxxxxxxxxxxxxxxxx choose date = 3 xxxxxxxxxxxxxx");
            date = null;
            //System.out.println(" xxxxxxxxxxxxxx date is null xxxxxxxxxxxxxxxxx date is xx"+date+" and code is "+code);
            vo.setNamedWhereClauseParam("pCode", code);
            vo.setNamedWhereClauseParam("pD", date);
            vo.executeQuery();
        }
       
           
            
            
    }
    
    public void ClearSearchMainItems(){
        ViewObjectImpl vo = this.getCtfMainVO();
        //System.out.println(" xxxxxxxxxxxxxxxxxxxxxxxx Clear Method, all values are null xxxxxxxxxxxxxxxxxxxxx");
        vo.setWhereClause(null);    
        vo.removeApplyViewCriteriaName("CtfMainVOCriteria");
        vo.executeQuery();
       
    }
    public void exeEmptyMainCtfItems(){
        ViewObjectImpl vo = this.getCtfMainVO();
        vo.executeEmptyRowSet();
    }
    
    public void resetMainCtf(){
        ViewObjectImpl vo = this.getCtfMainVO();
        vo.setWhereClause(null);
        vo.executeQuery();
    }

    /**
     * Container's getter for CtfMainVO1.
     * @return CtfMainVO1
     */
    public CtfMainVOImpl getCtfMainReportVO() {
        return (CtfMainVOImpl) findViewObject("CtfMainReportVO");
    }

    /**
     * Container's getter for CtfItemVO1.
     * @return CtfItemVO1
     */
    public ViewObjectImpl getCtfItemReportVO() {
        return (ViewObjectImpl) findViewObject("CtfItemReportVO");
    }

    /**
     * Container's getter for FkCtfItemCtfMainVL3.
     * @return FkCtfItemCtfMainVL3
     */
    public ViewLinkImpl getFkCtfItemCtfMainVL3() {
        return (ViewLinkImpl) findViewLink("FkCtfItemCtfMainVL3");
    }
    
    public void provideCtfMainByFacilityReport(String code){
        ViewObjectImpl vo = this.getCtfMainReportVO();
        ViewCriteria vc = vo.getViewCriteria("SearchByCodeCriteria");
        vo.applyViewCriteria(vc);
        vo.setNamedWhereClauseParam("p_code", code);
        vo.executeQuery();
    }

    /**
     * Container's getter for FacilityIter1.
     * @return FacilityIter1
     */
    public ViewObjectImpl getFacilityIter1() {
        return (ViewObjectImpl) findViewObject("FacilityIter1");
    }
}

